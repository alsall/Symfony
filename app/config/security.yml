jms_security_extra:
    secure_all_services: false
    expressions: true

security:
    encoders:
        Symfony\Component\Security\Core\User\User: plaintext
        Pnpc\Bundle\UserBundle\Entity\User: sha512

    role_hierarchy:
        ROLE_ADMIN:        [ROLE_USER, ROLE_USER_SCOPS, ROLE_USER_TORTUE, ROLE_USER_CISTUDE] 
        ROLE_USER_SCOPS:   ROLE_USER
        ROLE_USER_TORTUE:  ROLE_USER
        ROLE_USER_CISTUDE: ROLE_USER
        ROLE_SUPER_ADMIN:  [ROLE_USER, ROLE_ADMIN, ROLE_ALLOWED_TO_SWITCH]

    providers:
        #in_memory:
            #memory:
                #users:
                    #user:  { password: userpass, roles: [ 'ROLE_USER' ] }
                    #admin: { password: adminpass, roles: [ 'ROLE_ADMIN' ] }
        main:
            # entity: {class: Pnpc\Bundle\UserBundle\Entity\User, property: username }
            id: fos_user.user_provider.username

    firewalls:
        dev:
            pattern:  ^/(_(profiler|wdt)|css|images|js)/
            security: false

        #login:
            #pattern:  ^/demo/secured/login$
            #security: false

        secured_area:
            pattern:    ^/
            provider:    main
            form_login:
                check_path: fos_user_security_check
                login_path: /#fos_user_security_login
            logout:
                path:   fos_user_security_logout
                target: /
                invalidate_session:    false
            anonymous:  true
            remember_me:
                key:    %secret%
                #lifetime: 1800	
            #http_basic:
            #    realm: "Secured Demo Area"

    access_control:
        - { path: ^/admin/, roles: ROLE_ADMIN }
        # - { path: ^/login, roles: IS_AUTHENTICATED_ANONYMOUSLY, requires_channel: https }
        - { path: ^/Scops/, roles: ROLE_USER_SCOPS }
        - { path: ^/CistudeEurope/, roles: ROLE_USER_TORTUE }
        - { path: ^/TortueHermann/, roles: ROLE_USER_CISTUDE }